# /etc/zsh/zshrc ou ~/.zshrc
# Fichier de configuration principal de zsh

# 1. Les alias

#  Gestion du ls : couleur + touche pas aux accents
alias ls='ls --classify --tabsize=0 --literal --color=auto --show-control-chars --human-readable'

# Gestion du grep : couleur
alias grep='grep --color=auto'

# Demande confirmation avant d'√©craser un fichier
alias rm='rm --interactive'

# Raccourcis pour 'ls'
alias ll='ls -l'
alias la='ls -a'
alias lla='ls -la'

# Quelques alias pratiques
alias c='clear'
alias less='less --quiet'
alias s='cd ..'
alias df='pydf'
alias du='du --human-readable'
alias m='mutt -y'
alias ph33r_my_l4ck_0f_b33r='killall -9'
alias etc-update='dispatch-conf'
alias update-etc='dispatch-conf'
alias xboxdrv='xboxdrv --trigger-as-button --force-feedback -r 150,150'
alias maxeeeme='sshfs 192.168.1.11:/ /mnt/ssh -o allow_other'

# foobar.tex + return ouvre emacs sur foobar.tex
alias -s tex=emacs


# 2. Prompt et D√©finition des touches
#

# Correspondance touches-fonction
bindkey '^[[1~'    beginning-of-line       # Home marche
bindkey '^[[4~'    end-of-line             # End marche
bindkey '\e[7~'    beginning-of-line       # Home
bindkey '\e[8~'    end-of-line             # End
bindkey '^D'       delete-char             # Del
bindkey '[3~'    delete-char             # Del
bindkey '[2~'    overwrite-mode          # Insert
bindkey '[5~'    history-search-backward # PgUp
bindkey '[6~'    history-search-forward  # PgDn

# Prompt couleur (pas la m√™me pour root et pour les simples utilisateurs)
autoload -U colors
colors

host_color="green"
path_color="blue"
date_colore="yellow"


if [ "`id -u`" -eq 0 ]; then
  export PS1="%{[36;1m%}%T%{[0m%} %{[31;1m%}%n%{[0m[33;1m%}@%{[37;1m%}%m %{[32;1m%}%~%{[0m[33;1m%}%#%{[0m%} "
else
  export PS1="%{[36;1m%}%T%{[0m%} %{[34;1m%}%n%{[0m[33;1m%}@%{[37;1m%}%m %{[32;1m%}%~%{[0m[33;1m%}%#%{[0m%} "
fi

fortune -e


# Console linux, dans un screen
if [ "$TERM" = "linux" -o "$TERM" = "screen" -o "$TERM" = "urxvt" ]
then
  # Correspondance touches-fonction sp√©cifique
 bindkey '[1~' beginning-of-line       # Home
 bindkey '[4~' end-of-line             # End
fi

# xterm
if [ "$TERM" = "xterm" ]
then
  # Correspondance touches-fonction sp√©cifique
  bindkey '[H'  beginning-of-line       # Home
  bindkey '[F'  end-of-line             # End
fi

# gnome-terminal
if [ "$COLORTERM" = "gnome-terminal" ]
then
  # Correspondance touches-fonction sp√©cifique
  bindkey '^[OH'  beginning-of-line       # Home
  bindkey '^[OF'  end-of-line             # End
fi

# Gestion de la couleur pour 'ls' (exportation de LS_COLORS)
if [ -x /usr/bin/dircolors ]
then
  if [ -r ~/.dir_colors ]
  then
    eval "`dircolors ~/.dir_colors`"
  elif [ -r /etc/dir_colors ]
  then
    eval "`dircolors /etc/dir_colors`"
  else
    eval "`dircolors`"
  fi
fi

#
# 3. Options de zsh (cf 'man zshoptions')
#

# Je ne veux JAMAIS de beeps
unsetopt beep
unsetopt hist_beep
unsetopt list_beep
# >| doit √™tre utilis√©s pour pouvoir √©craser un fichier d√©j√† existant ;
# le fichier ne sera pas √©cras√© avec '>'
unsetopt clobber
# Ctrl+D est √©quivalent √† 'logout'
unsetopt ignore_eof
# Affiche le code de sortie si diff√©rent de '0'
setopt print_exit_value
# Demande confirmation pour 'rm *'
unsetopt rm_star_silent
# Correction orthographique des commandes
setopt correct
# Si on utilise des jokers dans une liste d'arguments, retire les jokers
# qui ne correspondent √† rien au lieu de donner une erreur
setopt nullglob

# Sch√©mas de compl√©tion

# Options de compl√©tion
# Quand le dernier caract√®re d'une compl√©tion est '/' et que l'on
# tape 'espace' apr√®s, le '/' est effa√ß√©
setopt auto_remove_slash
# Ne fait pas de compl√©tion sur les fichiers et r√©pertoires cach√©s
unsetopt glob_dots

# Traite les liens symboliques comme il faut
setopt chase_links

# Quand l'utilisateur commence sa commande par '!' pour faire de la
# compl√©tion historique, il n'ex√©cute pas la commande imm√©diatement
# mais il √©crit la commande dans le prompt
setopt hist_verify
# Si la commande est invalide mais correspond au nom d'un sous-r√©pertoire
# ex√©cuter 'cd sous-r√©pertoire'
setopt auto_cd
# L'ex√©cution de "cd" met le r√©pertoire d'o√π l'on vient sur la pile
setopt auto_pushd
# Ignore les doublons dans la pile
setopt pushd_ignore_dups
# N'affiche pas la pile apr√®s un "pushd" ou "popd"
setopt pushd_silent
# "pushd" sans argument = "pushd $HOME"
setopt pushd_to_home

# Les jobs qui tournent en t√¢che de fond sont nic√© √† '0'
unsetopt bg_nice
# N'envoie pas de "HUP" aux jobs qui tourent quand le shell se ferme
unsetopt hup

#
# 4. Param√®tres de l'historique des commandes
#

# Nombre d'entr√©es dans l'historique
export HISTORY=100
export SAVEHIST=100
# Fichier o√π est stock√© l'historique
export HISTFILE=$HOME/.history
# append command to history file once executed
setopt inc_append_history

#
# 5. Compl√©tion des options des commandes
#

zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}'
zstyle ':completion:*' max-errors 3 numeric
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache
zstyle ':completion::complete:*' use-cache 1

 # If you want to enable Portage completions and Gentoo prompt,
 # emerge app-shells/zsh-completion and add
autoload -U compinit promptinit
  compinit
  promptinit
  #prompt gentoo

# Pour screen
# if using GNU screen, let the zsh tell screen what the title and hardstatus
# of the tab window should be.
if [[ $TERM == "screen" ]]; then
  _GET_PATH='echo $PWD | sed "s/^\/Users\//~/;s/^~$USER/~/"'

 # use the current user as the prefix of the current tab title (since that's
  # fairly important, and I change it fairly often)
  TAB_TITLE_PREFIX='"`'$_GET_PATH' | sed "s:..*/::"`$PROMPT_CHAR"'
  # when at the shell prompt, show a truncated version of the current path (with
  # standard ~ replacement) as the rest of the title.
  TAB_TITLE_PROMPT='$SHELL:t'
  # when running a command, show the title of the command as the rest of the
  # title (truncate to drop the path to the command)
  TAB_TITLE_EXEC='$cmd[1]:t'

  # use the current path (with standard ~ replacement) in square brackets as the
  # prefix of the tab window hardstatus.
  TAB_HARDSTATUS_PREFIX='"[`'$_GET_PATH'`] "'
  # when at the shell prompt, use the shell name (truncated to remove the path to
  # the shell) as the rest of the title
  TAB_HARDSTATUS_PROMPT='$SHELL:t'
  # when running a command, show the command name and arguments as the rest of
  # the title
  TAB_HARDSTATUS_EXEC='$cmd'

  # tell GNU screen what the tab window title ($1) and the hardstatus($2) should be
  function screen_set()
  {
    # set the tab window title (%t) for screen
    print -nR $'\033k'$1$'\033'\\\

    # set hardstatus of tab window (%h) for screen
    print -nR $'\033]0;'$2$'\a'
  }
  # called by zsh before executing a command
  function preexec()
  {
    local -a cmd; cmd=(${(z)1}) # the command string
    eval "tab_title=$TAB_TITLE_PREFIX$TAB_TITLE_EXEC"
    eval "tab_hardstatus=$TAB_HARDSTATUS_PREFIX$TAB_HARDSTATUS_EXEC"
    screen_set $tab_title $tab_hardstatus
  }
  # called by zsh before showing the prompt
  function precmd()
  {
    eval "tab_title=$TAB_TITLE_PREFIX$TAB_TITLE_PROMPT"
    eval "tab_hardstatus=$TAB_HARDSTATUS_PREFIX$TAB_HARDSTATUS_PROMPT"
    screen_set $tab_title $tab_hardstatus
  }
fi

